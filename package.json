{
  "directories": {
    "test": "test"
  },
  "scripts": {
    "start": "npm run replica && npm run deploy && npm run mint",
    "replica": "dfx stop && dfx start --clean --background && dfx canister create staging && dfx canister create ledger",
    "deploy": " npm run deploy:staging && npm run deploy:ledger",
    "deploy-qq": "npm run deploy:staging -- -qq && npm run deploy:ledger -- -qq",
    "deploy:staging": "dfx canister create staging && DFX_MOC_PATH=\"$(vessel bin)/moc\" dfx deploy staging --mode reinstall -y --argument '(principal \"'$(dfx canister id staging)'\")'",
    "upgrade:staging": "dfx canister stop staging && DFX_MOC_PATH=\"$(vessel bin)/moc\" dfx deploy staging --upgrade-unchanged --argument '(principal \"'$(dfx canister id staging)'\")' && dfx canister start staging",
    "deploy:ledger": "dfx canister create ledger && DFX_MOC_PATH=\"$(vessel bin)/moc\" dfx deploy ledger --mode reinstall -y --argument '(record {minting_account = \"e82226d3101bd8525111e2c6501a79365f2484d82d3f2be96269b78fe200eeaa\"; initial_values = vec { record { \"8b61ff722d7e6321eb99bb607ab0cf323b3c64b43d6a13c245c8a4e197f7b38b\"; record { e8s=1_000_000_000_000_000 } }; }; send_whitelist = vec {}})'",
    "mint": "dfx canister call staging addAsset '(record {name = \"privat\";payload = record {ctype = \"text/html\"; data = vec {blob \"hello world!\"} } })' && dfx canister call staging initMint && dfx canister call staging shuffleTokensForSale && dfx canister call staging enableSale",
    "enable-sale": "dfx canister call staging enableSale",
    "vitest": "vitest run",
    "vitest:watch": "vitest watch",
    "env": "ts-node ./test/apply-env.ts",
    "test:pending-sale": "npm run env pending-sale && npm run deploy-qq && npm run mint && vitest run pending-sale",
    "test:public-sale": "npm run env public-sale && npm run deploy-qq && npm run mint && vitest run public-sale",
    "test:highload-sale": "npm run env highload-sale && npm run deploy-qq && npm run mint && vitest run highload-sale",
    "test:whitelist-sale": "npm run env whitelist-sale && npm run deploy-qq && npm run mint && vitest run whitelist-sale",
    "test:whitelist-slots": "npm run env whitelist-slots && npm run deploy-qq && npm run mint && vitest run whitelist-slots",
    "test:marketplace": "npm run env marketplace && npm run deploy-qq && npm run mint && vitest run marketplace",
    "test:fees": "npm run env fees && npm run deploy-qq && npm run mint && vitest run fees",
    "test:sold-out": "npm run env sold-out && npm run deploy-qq && npm run mint && vitest run sold-out",
    "test": "npm run test:pending-sale && npm run test:public-sale && npm run test:highload-sale && npm run test:whitelist-sale && npm run test:whitelist-slots && npm run test:marketplace && npm run test:fees && npm run test:sold-out"
  },
  "devDependencies": {
    "@dfinity/agent": "^0.15.0",
    "@dfinity/identity": "^0.15.0",
    "@dfinity/identity-secp256k1": "^0.15.1",
    "@dfinity/nns": "^0.10.0",
    "@dfinity/principal": "^0.15.0",
    "ts-node": "^10.9.1",
    "typescript": "^4.9.4",
    "vitest": "^0.25.6"
  }
}
